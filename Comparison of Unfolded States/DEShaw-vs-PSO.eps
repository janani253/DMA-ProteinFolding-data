%!PS-Adobe-2.0 EPSF-2.0
%%Title: CA.eps
%%Creator: gnuplot 5.2 patchlevel 8
%%CreationDate: Sun Jan  2 07:54:50 2022
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -33 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (CA.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 8)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jan  2 07:54:50 2022)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 100 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
590 2604 M
63 0 V
6366 0 R
-63 0 V
stroke
530 2604 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
/vshift -33 def
1.000 UL
LTb
LCb setrgbcolor
590 2772 M
63 0 V
6366 0 R
-63 0 V
stroke
530 2772 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0.1)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
590 2940 M
63 0 V
6366 0 R
-63 0 V
stroke
530 2940 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0.2)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
590 3108 M
63 0 V
6366 0 R
-63 0 V
stroke
530 3108 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0.3)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
590 3276 M
63 0 V
6366 0 R
-63 0 V
stroke
530 3276 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0.4)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
590 3444 M
63 0 V
6366 0 R
-63 0 V
stroke
530 3444 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0.5)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
590 3611 M
63 0 V
6366 0 R
-63 0 V
stroke
530 3611 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0.6)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
590 3779 M
63 0 V
6366 0 R
-63 0 V
stroke
530 3779 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0.7)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
590 3947 M
63 0 V
6366 0 R
-63 0 V
stroke
530 3947 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0.8)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
590 4115 M
63 0 V
6366 0 R
-63 0 V
stroke
530 4115 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0.9)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
590 4283 M
63 0 V
6366 0 R
-63 0 V
stroke
530 4283 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
590 4283 N
0 -1679 V
6429 0 V
0 1679 V
-6429 0 V
Z stroke
1.000 UP
LCb setrgbcolor
144 2520 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 150.0 0.0 true true 0 (R)]
[(Helvetica) 120.0 75.0 true true 0 (2)]
] -65.0 MLshow
grestore
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
145 3443 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 (DE Shaw Trajectories )]
] -33.3 MCshow
grestore
/Helvetica findfont 100 scalefont setfont
245 3443 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 ( vs our Multiple walkers)]
] -33.3 MCshow
grestore
/Helvetica findfont 100 scalefont setfont
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
1.00 0.00 0.00 C
590 3989 M
1085 2906 L
494 1087 V
495 -922 V
494 -326 V
495 -139 V
989 1318 V
494 -99 V
495 -79 V
989 -74 V
989 -720 V
590 3989 CircleF
1085 2906 CircleF
1579 3993 CircleF
2074 3071 CircleF
2568 2745 CircleF
3063 2606 CircleF
4052 3924 CircleF
4546 3825 CircleF
5041 3746 CircleF
6030 3672 CircleF
7019 2952 CircleF
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LTb
0.00 0.00 1.00 C
1085 4019 M
494 76 V
495 -353 V
494 -339 V
495 -775 V
494 1517 V
4052 3039 L
494 1044 V
6030 2990 L
494 10 V
495 155 V
1085 4019 CircleF
1579 4095 CircleF
2074 3742 CircleF
2568 3403 CircleF
3063 2628 CircleF
3557 4145 CircleF
4052 3039 CircleF
4546 4083 CircleF
6030 2990 CircleF
6524 3000 CircleF
7019 3155 CircleF
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LTb
0.00 1.00 0.00 C
590 3633 M
495 -574 V
494 270 V
989 -534 V
989 529 V
989 222 V
495 101 V
494 -867 V
495 1187 V
7019 2772 L
590 3633 CircleF
1085 3059 CircleF
1579 3329 CircleF
2568 2795 CircleF
3557 3324 CircleF
4546 3546 CircleF
5041 3647 CircleF
5535 2780 CircleF
6030 3967 CircleF
7019 2772 CircleF
% End plot #3
% Begin plot #4
1.000 UL
LTb
1.00 0.00 0.00 C
LCb setrgbcolor
6536 4170 M
[ [(Helvetica) 100.0 0.0 true true 0 (RMSD)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
1.00 0.00 0.00 C
6596 4170 M
303 0 V
% End plot #4
% Begin plot #5
stroke
LTb
0.00 0.00 1.00 C
LCb setrgbcolor
6536 4070 M
[ [(Helvetica) 100.0 0.0 true true 0 (hc-RMSD)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
0.00 0.00 1.00 C
6596 4070 M
303 0 V
% End plot #5
% Begin plot #6
stroke
LTb
0.00 1.00 0.00 C
LCb setrgbcolor
6536 3970 M
[ [(Helvetica) 100.0 0.0 true true 0 (d-RMSD)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
0.00 1.00 0.00 C
6596 3970 M
303 0 V
% End plot #6
stroke
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
590 4283 N
0 -1679 V
6429 0 V
0 1679 V
-6429 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
590 924 M
63 0 V
6366 0 R
-63 0 V
stroke
530 924 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
590 1111 M
63 0 V
6366 0 R
-63 0 V
stroke
530 1111 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0.1)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
590 1297 M
63 0 V
6366 0 R
-63 0 V
stroke
530 1297 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0.2)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
590 1484 M
63 0 V
6366 0 R
-63 0 V
stroke
530 1484 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0.3)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
590 1670 M
63 0 V
6366 0 R
-63 0 V
stroke
530 1670 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0.4)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
590 1857 M
63 0 V
6366 0 R
-63 0 V
stroke
530 1857 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0.5)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
590 2043 M
63 0 V
6366 0 R
-63 0 V
stroke
530 2043 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0.6)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
590 2230 M
63 0 V
6366 0 R
-63 0 V
stroke
530 2230 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0.7)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
590 2416 M
63 0 V
6366 0 R
-63 0 V
stroke
530 2416 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0.8)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
590 2603 M
63 0 V
6366 0 R
-63 0 V
stroke
530 2603 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 0.9)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
590 924 M
0 63 V
stroke
590 864 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 (Villin)]
] -33.3 MRshow
grestore
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1085 924 M
0 63 V
stroke
1035 864 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 (Trp-Cage )]
] -33.3 MRshow
grestore
/Helvetica findfont 100 scalefont setfont
1135 864 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 (\(implicit\))]
] -33.3 MRshow
grestore
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1579 924 M
0 63 V
stroke
1529 864 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 (Trp-Cage )]
] -33.3 MRshow
grestore
/Helvetica findfont 100 scalefont setfont
1629 864 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 (\(explicit\))]
] -33.3 MRshow
grestore
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2074 924 M
0 63 V
stroke
2074 864 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 (BBL)]
] -33.3 MRshow
grestore
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2568 924 M
0 63 V
stroke
2568 864 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Symbol) 100.0 0.0 true true 0 (a)]
[(Helvetica) 100.0 0.0 true true 0 (3D)]
] -33.3 MRshow
grestore
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3063 924 M
0 63 V
stroke
3063 864 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Symbol) 100.0 0.0 true true 0 (l)]
[(Helvetica) 100.0 0.0 true true 0 (-repressor)]
] -33.3 MRshow
grestore
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3557 924 M
0 63 V
stroke
3557 864 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 (Protein B)]
] -33.3 MRshow
grestore
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4052 924 M
0 63 V
stroke
4052 864 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 (Homeodomain)]
] -33.3 MRshow
grestore
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4546 924 M
0 63 V
stroke
4496 864 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Symbol) 100.0 0.0 true true 0 (b)]
[(Symbol) 100.0 0.0 true true 0 (b)]
[(Symbol) 100.0 0.0 true true 0 (a)]
[(Helvetica) 100.0 0.0 true true 0 ( )]
] -33.3 MRshow
grestore
/Helvetica findfont 100 scalefont setfont
4596 864 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 (\(implicit\))]
] -33.3 MRshow
grestore
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5041 924 M
0 63 V
stroke
4991 864 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Symbol) 100.0 0.0 true true 0 (b)]
[(Symbol) 100.0 0.0 true true 0 (b)]
[(Symbol) 100.0 0.0 true true 0 (a)]
[(Helvetica) 100.0 0.0 true true 0 ( )]
] -33.3 MRshow
grestore
/Helvetica findfont 100 scalefont setfont
5091 864 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 (\(explicit\))]
] -33.3 MRshow
grestore
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5535 924 M
0 63 V
stroke
5535 864 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 (Protein G)]
] -33.3 MRshow
grestore
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6030 924 M
0 63 V
stroke
5980 864 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 (Chignolin )]
] -33.3 MRshow
grestore
/Helvetica findfont 100 scalefont setfont
6080 864 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 (\(implicit\))]
] -33.3 MRshow
grestore
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6524 924 M
0 63 V
stroke
6474 864 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 (Chignolin )]
] -33.3 MRshow
grestore
/Helvetica findfont 100 scalefont setfont
6574 864 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 (\(explicit\))]
] -33.3 MRshow
grestore
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
7019 924 M
0 63 V
stroke
6969 864 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 (WW domain)]
] -33.3 MRshow
grestore
/Helvetica findfont 100 scalefont setfont
7069 864 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 (\(GTT variant\))]
] -33.3 MRshow
grestore
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
590 2603 N
590 924 L
6429 0 V
0 1679 V
-6429 0 V
Z stroke
1.000 UP
LCb setrgbcolor
144 2520 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 150.0 0.0 true true 0 (R)]
[(Helvetica) 120.0 75.0 true true 0 (2)]
] -65.0 MLshow
grestore
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
145 1763 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 (Our Multiple walkers )]
] -33.3 MCshow
grestore
/Helvetica findfont 100 scalefont setfont
245 1763 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 ( vs DE Shaw Trajectories)]
] -33.3 MCshow
grestore
/Helvetica findfont 100 scalefont setfont
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
1.00 0.00 0.00 C
590 2314 M
1085 1230 L
494 886 V
495 -920 V
2568 924 L
495 129 V
989 970 V
494 -217 V
495 -250 V
989 32 V
989 -129 V
590 2314 CircleF
1085 1230 CircleF
1579 2116 CircleF
2074 1196 CircleF
2568 924 CircleF
3063 1053 CircleF
4052 2023 CircleF
4546 1806 CircleF
5041 1556 CircleF
6030 1588 CircleF
7019 1459 CircleF
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LTb
0.00 0.00 1.00 C
1085 2055 M
494 322 V
2074 1295 L
2568 954 L
495 190 V
494 1312 V
495 -965 V
494 532 V
6030 978 L
494 -9 V
495 390 V
1085 2055 CircleF
1579 2377 CircleF
2074 1295 CircleF
2568 954 CircleF
3063 1144 CircleF
3557 2456 CircleF
4052 1491 CircleF
4546 2023 CircleF
6030 978 CircleF
6524 969 CircleF
7019 1359 CircleF
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LTb
0.00 1.00 0.00 C
590 1790 M
495 -422 V
494 468 V
989 -289 V
989 -138 V
989 410 V
495 -63 V
494 -659 V
495 1234 V
989 -469 V
590 1790 CircleF
1085 1368 CircleF
1579 1836 CircleF
2568 1547 CircleF
3557 1409 CircleF
4546 1819 CircleF
5041 1756 CircleF
5535 1097 CircleF
6030 2331 CircleF
7019 1862 CircleF
% End plot #3
% Begin plot #4
1.000 UL
LTb
1.00 0.00 0.00 C
LCb setrgbcolor
6536 2490 M
[ [(Helvetica) 100.0 0.0 true true 0 (RMSD)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
1.00 0.00 0.00 C
6596 2490 M
303 0 V
% End plot #4
% Begin plot #5
stroke
LTb
0.00 0.00 1.00 C
LCb setrgbcolor
6536 2390 M
[ [(Helvetica) 100.0 0.0 true true 0 (hc-RMSD)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
0.00 0.00 1.00 C
6596 2390 M
303 0 V
% End plot #5
% Begin plot #6
stroke
LTb
0.00 1.00 0.00 C
LCb setrgbcolor
6536 2290 M
[ [(Helvetica) 100.0 0.0 true true 0 (d-RMSD)]
] -33.3 MRshow
/Helvetica findfont 100 scalefont setfont
1.000 UL
LTb
0.00 1.00 0.00 C
6596 2290 M
303 0 V
% End plot #6
stroke
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
590 2603 N
590 924 L
6429 0 V
0 1679 V
-6429 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
